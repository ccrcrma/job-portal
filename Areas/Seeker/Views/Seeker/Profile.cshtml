@model ApplicationUser
@{
    ViewBag.Title = "Profile";
    var pictureModel = new ImageFormFileViewModel();
    var basicProfileInfoVm = Model.GetProfileInfo();
    var formFileModel = new FormFileViewModel();
    }

<h2>User Profile </h2>
<div class="row bg-light pt-3">
    <div class="col-md-4 mb-3">
        @if(!string.IsNullOrEmpty(Model.Profile.ImagePath)){
            <img src="~/@Model.Profile.ImagePath" class="img-profile" alt="your current profile picture" id ="profile-pic">

        }else {
            <img src="~/img/team/2.png" class="img-profile" alt="default picture" id="profile-pic">
        }
        <div class="card my-3">
            <div class="card-header">
                <h5 class="card-title">Update Profile Picture</h5>
            </div>
            <div class="card-body">
                <form asp-action="UploadPicture" enctype="multipart/form-data" 
                    data-ajax="true"
                    data-ajax-complete="pictureCallback">
                    <div class="form-group" id="picture-form-container">
                        @{await Html.RenderPartialAsync("_ImageFormFilePartial",pictureModel);}
                    </div>
                    <div>
                        <button type="submit" class="btn btn-success d-block ml-auto">Update</button>
                    </div>
                </form>
            </div>
        </div>
        <div id="picture-update-success">
        </div>
    </div>
    <div class="col-md-4 mb-3">
        <div class="card">
            <div class="card-header">
                <h6 class="card-title">Update your profile</h6>
            </div>
            <div class="card-body">
                <form asp-action="ProfileInfo" data-ajax="true" data-ajax-complete="profileInfoCallback" >
                    <div id="profile-form-container">
                        @{await Html.RenderPartialAsync("_BasicProfileInfo",basicProfileInfoVm);}
                    </div>
                    <div class="form-group">
                        <button type="submit" class="btn btn-success">Update</button>
                    </div>
                </form>
            </div>
        </div>
        <div id="profile-success-container">

        </div>
    </div>
    <div class="col-md-4 mb-3">
        <div class="card mb-3">
            <div class="card-header">
                <h5 class="card-title">
                    About You
                </h5>
            </div>
            <div class="card-body">
                <div class="row form-group">
                    <label for="Name" class="form-label col-sm-4">Full Name</label>
                    <input type="text" readonly value="@Model.Name" class="col-sm-8 form-control">
                    <span class="text-danger"></span>
                </div>

                <div class="form-group row">
                    <label for="Name" class="form-label col-sm-4">Email</label>
                    <input type="text" readonly value="@Model.Email" class="form-control col-sm-8">
                    <span class="text-danger"></span>
                </div>
                <div class="form-group row">
                    <label for="Name" class="form-label col-sm-4">Address</label>
                    <input type="text" readonly value="@Model.Profile.Address" class="form-control col-sm-8">
                    <span class="text-danger"></span>
                </div>
                <div class="form-group row">
                    <label for="Name" class="form-label col-sm-4">Gender</label>
                    <input type="text" readonly value="@Model.Gender" class="form-control col-sm-8">
                    <span class="text-danger"></span>
                </div>
                <div class="form-group row">
                    <label for="member-on" class="form-label col-sm-4">Member On</label>
                    <input type="date" class="form-control col-sm-8" value="@Model.CreatedOn.ToString("yyyy-MM-dd")" readonly>
                    <span class="text-danger"></span>
                </div>
                <div class="form-group">
                    <a 
                        data-document-type="cover-letter"
                        asp-action="DownloadFile" 
                        asp-route-fileName="@Model.Profile?.CoverLetter"
                        asp-route-originalFileName="@Model.Profile?.CoverLetterOriginalName",
                        asp-route-documentType="cover-letter">cover letter</a>

                </div>
                <div class="form-group">
                    <a  
                        data-document-type="cv"
                        asp-action="DownloadFile"
                        asp-route-fileName="@Model.Profile?.Resume"
                        asp-route-originalFileName="@Model.Profile?.ResumeOriginalName"
                        asp-route-documentType="cv">resume</a>
                </div>
            </div>
        </div>
        <div class="card mb-3">
            <div class="card-header">
                <h5 class="card-title">
                    Update coverletter
                </h5>
            </div>
            <div class="card-body">
                <form asp-action="UploadDocument" enctype="multipart/form-data"
                    data-ajax="true"
                    data-ajax-complete="coverLetterAjaxCallback" >
                    <div 
                        class="form-group"
                        id="cover-letter-form-container">
                        @{await Html.RenderPartialAsync("_FormFilePartial", formFileModel);}
                    </div>
                    <div class="form-group d-flex">
                        <input type="hidden" name="document" value="coverLetter">
                        <button class="btn btn-success ml-auto" type="submit">Update</button>
                    </div>
                </form>
                <div id="cover-letter-alert-container">

                </div>
            </div>
        </div>
        <div class="card mb-3">
            <div class="card-header">
                <h5 class="card-title">
                    Update resume
                </h5>
            </div>
            <div class="card-body">
                <form asp-action="UploadDocument" enctype="multipart/form-data" 
                    data-ajax="true" data-ajax-complete="resumeAjaxCallback">
                    <div class="form-group" id="resume-form-container">
                        @{await Html.RenderPartialAsync("_FormFilePartial", formFileModel);}
                    </div>
                    <div class="form-group d-flex">
                        <input type="hidden" name="document" value="resume">
                        <button class="btn btn-success ml-auto" type="submit">Update</button>
                    </div>
                </form>
                <div id="resume-alert-container">
                </div>
            </div>
        </div>
    </div>
</div>


@section Scripts{
    <partial name="_ValidationScriptsPartial"></partial>
    <partial name="_AjaxPartial"></partial>
    <script>
        function changeImageSrc(imageElement, newFileName){
            var currentSrc = imageElement.getAttribute("src");
            console.log(currentSrc);
            var srcArray = currentSrc.split("/");
            srcArray[3] = newFileName;
            var newSrc = srcArray.join("/");
            imageElement.setAttribute("src", newSrc)
        }
        pictureCallback = function(xhr){
            switch(xhr.status){
                case 200:
                    document.getElementById("picture-update-success").innerHTML  = 
                    `<div class="alert alert-success alert-dismissible fade show" role="alert">
                        <strong>Holy guacamole!</strong> Profile Picture updated Successfully.
                        <button type="button" class="close" data-dismiss="alert" aria-label="Close">&times;</button>
                    </div>`
                    var profileImage = document.getElementById("profile-pic");
                    const {fileName} = xhr.responseJSON;
                    changeImageSrc(profileImage, fileName);
                    break;
                case 400:
                    document.getElementById("picture-form-container").innerHTML = xhr.responseText;
                    break;

            }
        }

        function changeBrowserUrl(url){
            window.location.href = url;
        }

        profileInfoCallback = function(xhr){
            switch(xhr.status){
                case 200:
                    document.getElementById("profile-success-container").innerHTML  = 
                    `<div class="alert alert-success alert-dismissible fade show" role="alert">
                        <strong>Holy guacamole!</strong> Info updated Successfully.
                        <button type="button" class="close" data-dismiss="alert" aria-label="Close">&times;</button>
                    </div>`
                    var body = xhr.responseJSON;
                    if(body !=undefined){
                        const {redirectUrl} = body;
                        setTimeout(function(){
                            changeBrowserUrl(redirectUrl);
                        }, 1000);
                    }

                break;
                case 400:
                    document.getElementById("profile-form-container").innerHTML= xhr.responseText;
                    break;
            }
        }

        function uploadLinkUrl(linkDataSetValue, responseData){
            var elem= document.querySelector(`a[data-document-type="${linkDataSetValue}"]`);
            var relativeUrl = elem.getAttribute("href");
            var pathUrl = relativeUrl.substring(0, relativeUrl.indexOf("?"));
            var queryParams = relativeUrl.substring(relativeUrl.indexOf("?")+1);
            var searchParams =  new URLSearchParams(queryParams);
            for(const propery in responseData){
                searchParams.set(propery, responseData[propery]);
            }
            console.log(searchParams.toString());
            var url = pathUrl + "?" + searchParams.toString();
            elem.setAttribute("href", url);

        }

        function AfterFileUploadTask(xhr, data){
            console.log(xhr.responseJSON);
            const {alertContainer, successMessage, formContainer} = data;
            switch(xhr.status){
                case 200:
                    document.getElementById(alertContainer).innerHTML  = 
                    `<div class="alert alert-success alert-dismissible fade show" role="alert">
                        <strong>Holy guacamole!</strong> ${successMessage}
                        <button type="button" class="close" data-dismiss="alert" aria-label="Close">&times;</button>
                    </div>`
                uploadLinkUrl(data.dataActionType, xhr.responseJSON);
                break;
                case 400:
                    document.getElementById(formContainer).innerHTML= xhr.responseText;
                    break;
                }
            
            }
        resumeAjaxCallback = function(xhr){
            AfterFileUploadTask(xhr,{
                alertContainer:"resume-alert-container",
                successMessage:"resume updated Successfully.",
                formContainer:"resume-form-container",
                dataActionType:"cv"
                });
            }

        coverLetterAjaxCallback = function(xhr){
            AfterFileUploadTask(xhr, {
                alertContainer:"cover-letter-alert-container",
                successMessage: "cover letter updated successfully.",
                formContainer:"cover-letter-form-container",
                dataActionType:"cover-letter"
            });

        }
    </script>
}