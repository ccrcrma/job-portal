@model PaginationModal<Job>
@{
    ViewBag.Title = "all jobs";
}

@if(Model.Count() == 0){
    <h2>No any jobs. Add jobs first</h2>
}else {
    <table class="table table-striped">
        <thead>
            <tr>
                <th>Created Date</th>
                <th>Position</th>
                <th>Company</th>
                <th>Status</th>
                <th>View</th>
            </tr>
        </thead>
        <tbody>
            @foreach(var job in Model){
                <tr>
                    <td>@job.CreatedOn.GetHumanFriendlyDate()</td>
                    <td>@job.Title</td>
                    <td>Some company</td>
                    <td><published-status status="@job.Status"></published-status> </td>
                    <td><a asp-controller="Job" asp-action="Detail" asp-route-id="@job.Id" class="btn btn-primary">Read</a></td>
                </tr>
            }
        </tbody>
    </table>

    <nav>
        <ul class="pagination">
            <li class="page-item @(Model.HasPreviousPage? "": "disabled")">
                <a asp-action="Index" asp-controller="Job" asp-route-page="@(Model.CurrentPage -1)" class="page-link"  aria-label="Previous">
                    <span aria-hidden="true">&laquo;</span>
                </a>
            </li>
            @for(int i =1; i<=Model.TotalPage; i++){
                <li class="page-item @(i == Model.CurrentPage ? "active": "")">
                    <a asp-controller="Job" asp-action="Index" asp-route-page="@i" class="page-link">@i</a>
                </li>
            }
            <li class="page-item  @(Model.HasNextPage? "": "disabled")">
                <a  class="page-link" aria-label="Next">
                    <span aria-hidden="true">&raquo;</span>
                </a>
            </li>
        </ul>
    </nav>
}